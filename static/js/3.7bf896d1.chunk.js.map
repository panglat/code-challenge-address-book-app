{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","store/settings/selectors.js","components/base-components/Button/index.js","utils/constants.js","store/users/selectors.js","components/app-components/UserSearch/index.js","components/app-components/UserList/UserListItem/index.js","components/base-components/SimpleModal/index.js","components/app-components/UserDetailsModal/index.js","components/base-components/LoadingSpinner/index.js","components/app-components/UserList/index.js","components/app-components/Users/index.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","_slicedToArray","arr","Array","isArray","Symbol","iterator","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","err","unsupportedIterableToArray","TypeError","nationalitySearch","state","settings","Button","children","buttonType","rest","className","cn","defaultProps","USERS_BATCH_SIZE","USERS_MAX_CATALOGUE_LENGTH","nationalities","ch","es","fr","gb","userSearch","users","UserSearch","useState","search","setSearch","dispatch","useDispatch","storeUserSearch","useSelector","useEffect","htmlFor","id","type","onChange","event","setUserSearch","handleChange","UserListItem","user","email","login","name","picture","alt","first","last","src","thumbnail","username","SimpleModal","onCloseModal","onClick","UserDetailsModal","location","street","number","city","postcode","phone","cell","LoadingSpinner","UserList","userList","userListSelector","isFetchingUsers","loading","loadingUsersSelector","fetchFailed","error","loadUserFailedSelector","recordsToDisplay","userRecordsToDisplaySelector","userFilterLowerCase","userSearchSelector","toLowerCase","selectedNationalities","nationalitySearchSelector","selectedUser","setSelectedUser","userListRef","useRef","setUsersRecordsToDisplay","requestUsers","listLength","join","current","handleScroll","offsetHeight","scrollTop","scrollHeight","resetUsersError","addEventListener","removeEventListener","ref","filter","index","includes","map","salt","onItemClick","Users"],"mappings":"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","file":"static/js/3.7bf896d1.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","/**\n * @file Manages Settings Redux selectors.\n * @module redux-store/settings/Selectors\n */\n\n/**\n * @function\n * @description Get nationality search.\n */\nexport const nationalitySearch = (state) => state.settings.nationalitySearch;\n","/**\n * @file Render an html button element.\n * @module base-components/Button\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\n\nimport './styles.scss';\n\nconst Button = ({ children, buttonType, ...rest }) => (\n  <button className={cn('button', { [`button--${buttonType}`]: buttonType })} {...rest}>\n    {children}\n  </button>\n);\n\nButton.propTypes = {\n  children: PropTypes.node,\n  buttonType: PropTypes.oneOf(['primary', 'secondary']),\n};\n\nButton.defaultProps = {\n  children: null,\n  buttonType: 'primary',\n};\n\nexport default Button;\n","export const USERS_BATCH_SIZE = 50;\nexport const USERS_MAX_CATALOGUE_LENGTH = 1000;\nexport const nationalities = {\n  ch: 'Swiss',\n  es: 'Spanish',\n  fr: 'French',\n  gb: 'British',\n};\n","/**\n * @file Manages Users Redux selectors.\n * @module redux-store/users/Selectors\n */\n\n/**\n * @function\n * @description Get users list\n */\nexport const userList = (state) => state.users.userList;\n/**\n * @function\n * @description Get users list\n */\nexport const loadingUsers = (state) => state.users.loading;\n/**\n * @function\n * @description Get the number of records to display in the users list.\n */\nexport const userRecordsToDisplay = (state) => state.users.recordsToDisplay;\n/**\n * @function\n * @description Get if the last user list request failed\n */\nexport const loadUserFailed = (state) => state.users.error;\n/**\n * @function\n * @description Get user search\n */\nexport const userSearch = (state) => state.users.userSearch;\n","/**\n * @file Render an input text to get the user search.\n * @module app-components/UserSearch\n */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { userSearch } from '../../../store/users/selectors';\nimport { setUserSearch } from '../../../store/users/actions';\n\nimport './styles.scss';\n\nconst UserSearch = ({ className }) => {\n  const [search, setSearch] = useState('');\n  const dispatch = useDispatch();\n  const storeUserSearch = useSelector((state) => userSearch(state));\n\n  useEffect(() => {\n    setSearch(storeUserSearch);\n  }, [storeUserSearch]);\n\n  const handleChange = (event) => {\n    dispatch(setUserSearch(event.target.value));\n  };\n\n  return (\n    <form className={cn('user-search', className)}>\n      <label htmlFor=\"searchInput\">\n        Search:\n        <input\n          id=\"searchInput\"\n          type=\"text\"\n          value={search}\n          onChange={(event) => handleChange(event)}\n        />\n      </label>\n    </form>\n  );\n};\n\nUserSearch.propTypes = {\n  className: PropTypes.string,\n};\n\nUserSearch.defaultProps = {\n  className: '',\n};\n\nexport default UserSearch;\n","/**\n * @file Render one user item in the list.\n * @module app-components/UserList/UserListItem\n */\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst UserListItem = ({ user, ...rest }) => {\n  const {\n    email, login, name, picture,\n  } = user;\n  return (\n    <div className=\"user-list-item\" {...rest}>\n      <div className=\"user-list-item__image\">\n        <img\n          alt={`${name.first} ${name.last}`}\n          src={picture.thumbnail}\n          className=\"user-list-item__image-thumbnail\"\n        />\n      </div>\n      <div className=\"user-list-item__user-information\">\n        <h2 className=\"user-list-item__full-name\">Name: {name.first} {name.last}</h2>\n        <p className=\"user-list-item__user-name\">Username: {login.username}</p>\n        <p className=\"user-list-item__email\">Email: {email}</p>\n      </div>\n    </div>\n  );\n};\n\nUserListItem.propTypes = {\n  user: PropTypes.shape({\n    email: PropTypes.string,\n    first: PropTypes.string,\n    login: PropTypes.shape({ username: PropTypes.string }),\n    last: PropTypes.string,\n    name: PropTypes.shape({ first: PropTypes.string, last: PropTypes.string }),\n    picture: PropTypes.shape({ thumbnail: PropTypes.string }),\n  }).isRequired,\n};\n\nexport default UserListItem;\n","/**\n * @file Render a simple modal element.\n * @module base-components/SimpleModal\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '../Button';\n\nimport './styles.scss';\n\nconst SimpleModal = ({ children, onCloseModal }) => (\n  <div className=\"simple-modal\">\n    <section className=\"simple-modal__main\">\n      {children}\n      <div className=\"simple-modal__actions\">\n        <Button onClick={onCloseModal}>Close</Button>\n      </div>\n    </section>\n  </div>\n);\n\nSimpleModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n\nSimpleModal.defaultProps = {\n  children: null,\n  onCloseModal: () => {},\n};\n\n\nexport default SimpleModal;\n","/**\n * @file Render the user details modal.\n * @module app-components/UserDetailsModal\n */\n\n/* eslint-disable react/jsx-one-expression-per-line */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport SimpleModal from '../../base-components/SimpleModal';\n\nimport './styles.scss';\n\nconst UserDetailsModal = ({ user, ...rest }) => {\n  const { location, name } = user;\n  return (\n    <SimpleModal {...rest}>\n      <div className=\"user-details-modal\">\n        <h2>{`${name.first} ${name.last}`}</h2>\n        <p><b>Address:</b> {`${location.street.number}, ${location.street.name}`}</p>\n        <p><b>City:</b> {location.city}</p>\n        <p><b>State:</b> {location.state}</p>\n        <p><b>PostCode:</b> {location.postcode}</p>\n        <p><b>Phone:</b> {user.phone}</p>\n        <p><b>Cell:</b> {user.cell}</p>\n      </div>\n    </SimpleModal>\n  );\n};\n\nUserDetailsModal.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.shape({ first: PropTypes.string, last: PropTypes.string }),\n    location: PropTypes.shape({\n      cell: PropTypes.string,\n      city: PropTypes.string,\n      phone: PropTypes.string,\n      postcode: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      state: PropTypes.string,\n      street: PropTypes.shape({\n        number: PropTypes.number,\n        name: PropTypes.string,\n      }),\n    }),\n    phone: PropTypes.string,\n    cell: PropTypes.string,\n  }).isRequired,\n};\n\nexport default UserDetailsModal;\n","/**\n * @file Render a loading spinner element.\n * @module base-components/LoadingSpinner\n */\nimport React from 'react';\n\nimport './styles.scss';\n\nconst LoadingSpinner = () => (\n  <div className=\"loading-spinner\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default LoadingSpinner;\n","/**\n * @file Render the user list.\n * @module app-components/UserList\n */\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  requestUsers,\n  setUsersRecordsToDisplay,\n  resetUsersError,\n} from '../../../store/users/actions';\nimport {\n  userList as userListSelector,\n  loadingUsers as loadingUsersSelector,\n  userRecordsToDisplay as userRecordsToDisplaySelector,\n  loadUserFailed as loadUserFailedSelector,\n  userSearch as userSearchSelector,\n} from '../../../store/users/selectors';\nimport {\n  nationalitySearch as nationalitySearchSelector,\n} from '../../../store/settings/selectors';\nimport UserListItem from './UserListItem';\nimport UserDetailsModal from '../UserDetailsModal';\nimport {\n  USERS_BATCH_SIZE,\n  USERS_MAX_CATALOGUE_LENGTH,\n} from '../../../utils/constants';\nimport LoadingSpinner from '../../base-components/LoadingSpinner';\n\nimport './styles.scss';\n\n/**\n * @lends module:app-components/UserList\n */\nconst UserList = ({ className }) => {\n  const dispatch = useDispatch();\n  const users = useSelector((state) => userListSelector(state));\n  const isFetchingUsers = useSelector((state) => loadingUsersSelector(state));\n  const fetchFailed = useSelector((state) => loadUserFailedSelector(state));\n  const recordsToDisplay = useSelector((state) => userRecordsToDisplaySelector(state));\n  const userFilterLowerCase = useSelector((state) => userSearchSelector(state)).toLowerCase();\n  const selectedNationalities = useSelector((state) => nationalitySearchSelector(state));\n  const [selectedUser, setSelectedUser] = useState(null);\n  const userListRef = useRef(null);\n\n  /**\n   * HOW USERS ARE PRE-EMPTIVELY FETCHED\n   * The all users are stored *users* array. There is also a *recordsToDisplay*\n   * variable saving the number of users to be displayed in the UI user list.\n   * At the beginning the *recordsToDisplay* is set to USERS_BATCH_SIZE, making the useEffect\n   * to bring the first batch of users. Now *users*.length === *recordsToDisplay*,\n   * and a new pre-emptively fetch will be dispatched.\n   * Everytime the users length is lesser or equals to *recordsToDisplay*, a\n   * new pre-emptively user fetch will be dispatched.\n   * Once the new batch of user if fetched, they will be added at the end of the\n   * *users* list but they will not be displayed in the UI user list due to\n   * *recordsToDisplay* will not be updated with the new *users* list length.\n   * Once the user scroll to the button of the page, *recordsToDisplay* will be\n   * equal to *users* length, displaying in the full user list users in the UI,\n   * and a new pre-emptively user fetch will be dispatched.\n   */\n\n  /**\n   * Once the component is loaded, *recordsToDisplay* will be set with the first batch of users\n   */\n  useEffect(() => {\n    dispatch(setUsersRecordsToDisplay(USERS_BATCH_SIZE));\n  }, [dispatch]);\n\n  /**\n   * This effect fetches a batch of users.\n   */\n  useEffect(() => {\n    /**\n     * Everytime the users length is lesser or equals to *recordsToDisplay*, a\n     * new pre-emptively user fetch will be dispatched.\n     * The pre-emptively user fetch will not be dispatched if the is a previous\n     * fetch is being in process or the end of the catalog has been reached.\n     * Once the end of user catalog is reached, the last batch of user is\n     * displayed in the UI list by setting *recordsToDisplay* = *users*.length\n     */\n    if (!isFetchingUsers && users.length <= recordsToDisplay) {\n      if (recordsToDisplay < USERS_MAX_CATALOGUE_LENGTH && !fetchFailed) {\n        dispatch(\n          requestUsers({\n            listLength: USERS_BATCH_SIZE,\n            nationalities:\n              selectedNationalities && selectedNationalities.length > 0\n                ? selectedNationalities.join(',')\n                : null,\n          }),\n        );\n      } else {\n        dispatch(setUsersRecordsToDisplay(users.length));\n      }\n    }\n  }, [\n    dispatch,\n    isFetchingUsers,\n    users.length,\n    recordsToDisplay,\n    selectedNationalities,\n    fetchFailed,\n  ]);\n\n  const onItemClick = (user) => {\n    setSelectedUser(user);\n  };\n\n  /**\n   * this effect manages the infinite scroll\n   */\n  useEffect(() => {\n    if (!userListRef) return;\n    const { current } = userListRef;\n\n    /**\n     * Manage the user list scroll\n     */\n    const handleScroll = () => {\n      if (\n        current.offsetHeight + current.scrollTop !== current.scrollHeight && !isFetchingUsers\n      ) {\n        // The user has not reached the bottom of the list\n        return;\n      }\n      /**\n       * If the user reaches the bottom of the page, *recordsToDisplay* is set with *users*.length\n       * and any previous request error being is reset.\n       */\n      dispatch(setUsersRecordsToDisplay(users.length));\n      if (fetchFailed) {\n        dispatch(resetUsersError());\n      }\n    };\n\n    // Subscribe to the scroll event\n    current.addEventListener('scroll', handleScroll);\n\n    // Unsubscribe to the scroll event\n    // eslint-disable-next-line consistent-return\n    return () => current.removeEventListener('scroll', handleScroll);\n  }, [dispatch, fetchFailed, isFetchingUsers, userListRef, users.length]);\n\n  return (\n    <div className={cn('user-list', className)} ref={userListRef}>\n      <div className=\"user-list__container\">\n        {users\n          && users\n            .filter((user, index) => {\n              if (index >= recordsToDisplay) {\n                return false;\n              }\n              if (userFilterLowerCase) {\n                const { name } = user;\n                const fullNameLowercase = `${name.first} ${name.last}`.toLowerCase();\n                return fullNameLowercase.includes(userFilterLowerCase);\n              }\n              return true;\n            })\n            .map((user, index) => (\n              <UserListItem\n                key={`${user.login.salt}`}\n                index={index}\n                onClick={() => onItemClick(user)}\n                user={user}\n              />\n            ))}\n      </div>\n      {isFetchingUsers && (\n        <div className=\"user-list__loading-message\">\n          <LoadingSpinner />\n          <span>Fetching users</span>\n        </div>\n      )}\n      {!isFetchingUsers && fetchFailed && (\n        <div className=\"user-list__failed-message\">User fetch failed</div>\n      )}\n      {users.length >= USERS_MAX_CATALOGUE_LENGTH && (\n        <div className=\"user-list__end-of-user-catalog-message\">\n          End of users catalog\n        </div>\n      )}\n      {selectedUser && (\n        <UserDetailsModal\n          onCloseModal={() => setSelectedUser(null)}\n          user={selectedUser}\n        />\n      )}\n    </div>\n  );\n};\n\nUserList.propTypes = {\n  className: PropTypes.string,\n};\n\nUserList.defaultProps = {\n  className: '',\n};\n\n\nexport default UserList;\n","/**\n * @file Render the Users route.\n * @module app-components/Users\n */\nimport React from 'react';\n\nimport UserSearch from '../UserSearch';\nimport UserList from '../UserList';\n\nimport './styles.scss';\n\nconst Users = () => (\n  <div className=\"users\">\n    <UserSearch className=\"users__user-search\" />\n    <UserList className=\"users__user-list\" />\n  </div>\n);\n\nexport default Users;\n"],"sourceRoot":""}