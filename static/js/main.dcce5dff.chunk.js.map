{"version":3,"sources":["store/users/actions.js","store/settings/actionTypes.js","store/users/actionTypes.js","components/base-components/Header/index.js","components/base-components/Main/index.js","components/app-components/NavBar/index.js","components/App/index.js","store/users/reducer.js","store/settings/reducer.js","store/rootReducer.js","utils/api/RandomUserAPI.js","services/UserService.js","store/users/sagas.js","store/rootSaga.js","store/configureStore.js","index.js"],"names":["requestUsers","params","type","USERS_FETCH_REQUESTED","payload","requestUsersSuccess","response","USERS_FETCH_SUCCEEDED","requestUsersError","error","USERS_FETCH_FAILED","setUsersRecordsToDisplay","records","SET_USERS_RECORD_TO_DISPLAY","resetUsersError","RESET_USERS_FETCH_FAILED","clearUsersList","CLEAR_USERS_LIST","setUserSearch","userSearch","SET_USERS_SEARCH","SET_NATIONALITY_SEARCH","Header","children","className","defaultProps","Main","NavBar","cn","exact","activeClassName","to","Users","lazy","Settings","App","store","fallback","path","initialState","recordsToDisplay","loading","userList","nationalitySearch","combineReducers","users","state","action","settings","RandomUserAPI","axios","create","baseURL","getUserList","a","listLength","nationalities","get","results","nat","data","console","log","fetchUsers","watchFetchUsers","sagas","call","result","put","message","takeLatest","all","rootSaga","userSagas","map","spawn","sagaMiddleware","createSagaMiddleware","composeEnhancers","composeWithDevTools","createStore","rootReducer","applyMiddleware","run","configureStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcce5dff.chunk.js","sourcesContent":["/**\n * @file Manages User Redux actions.\n * @module redux-store/users/Selectors\n */\nimport {\n  USERS_FETCH_REQUESTED,\n  USERS_FETCH_SUCCEEDED,\n  USERS_FETCH_FAILED,\n  SET_USERS_RECORD_TO_DISPLAY,\n  RESET_USERS_FETCH_FAILED,\n  SET_USERS_SEARCH,\n  CLEAR_USERS_LIST,\n} from './actionTypes';\n\n/**\n * @function\n * @description Request users list.\n * @param {getUserListParams} params getUserList api parameters.\n */\nexport const requestUsers = (params) => ({\n  type: USERS_FETCH_REQUESTED,\n  payload: { params },\n});\n\n/**\n * @function\n * @description Request users list success.\n * @param {response} response getUserList parameters.\n */\nexport const requestUsersSuccess = (response) => ({\n  type: USERS_FETCH_SUCCEEDED,\n  payload: { response },\n});\n\n/**\n * @function\n * @description Request users list failed.\n * @param {error} error request error.\n */\nexport const requestUsersError = (error) => ({\n  type: USERS_FETCH_FAILED,\n  payload: { error },\n});\n\n/**\n * @function\n * @description Set the number of records to display in the users list\n * @param {number} records number of records\n */\nexport const setUsersRecordsToDisplay = (records) => ({\n  type: SET_USERS_RECORD_TO_DISPLAY,\n  payload: { records },\n});\n\n/**\n * @function\n * @description Reset user request error\n */\nexport const resetUsersError = () => ({\n  type: RESET_USERS_FETCH_FAILED,\n  payload: {},\n});\n\n/**\n * @function\n * @description Clear users list\n */\nexport const clearUsersList = () => ({\n  type: CLEAR_USERS_LIST,\n  payload: {},\n});\n\n/**\n * @function\n * @description Set user search\n * @param {string} userSearch user search\n */\nexport const setUserSearch = (userSearch) => ({\n  type: SET_USERS_SEARCH,\n  payload: { userSearch },\n});\n","/**\n * @file Manages Settings Redux action types.\n * @module redux-store/settings/ActionTypes\n */\n\n/**\n * @constant {string} SET_NATIONALITY_SEARCH set nationality search.\n */\nexport const SET_NATIONALITY_SEARCH = 'SET_NATIONALITY_SEARCH';\n","/**\n * @file Manages User Redux action types.\n * @module redux-store/users/ActionTypes\n */\n\n/**\n * @constant {string} USERS_FETCH_REQUESTED request users list\n */\nexport const USERS_FETCH_REQUESTED = 'USERS_FETCH_REQUESTED';\n\n/**\n * @constant {string} USERS_FETCH_SUCCEEDED Request users list success.\n */\nexport const USERS_FETCH_SUCCEEDED = 'USERS_FETCH_SUCCEEDED';\n/**\n * @constant {string} USERS_FETCH_SUCCEEDED Request users list failed.\n */\nexport const USERS_FETCH_FAILED = 'USERS_FETCH_FAILED';\n/**\n * @constant {string} SET_USERS_RECORD_TO_DISPLAY Set the number of records to display in\n * the users list.\n */\nexport const SET_USERS_RECORD_TO_DISPLAY = 'SET_USERS_RECORD_TO_DISPLAY';\n/**\n * @constant {string} RESET_USERS_FETCH_FAILED Reset user request error.\n */\nexport const RESET_USERS_FETCH_FAILED = 'RESET_USERS_FETCH_FAILED';\n/**\n * @constant {string} CLEAR_USERS_LIST Clear users list.\n */\nexport const CLEAR_USERS_LIST = 'CLEAR_USERS_LIST';\n/**\n * @constant {string} SET_USERS_SEARCH Set user search\n */\nexport const SET_USERS_SEARCH = 'SET_USERS_SEARCH';\n","/**\n * @file Render an html header element.\n * @module base-components/Header\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst Header = ({ children }) => (\n  <header className=\"header\">\n    {children}\n  </header>\n);\n\nHeader.propTypes = {\n  children: PropTypes.node,\n};\n\nHeader.defaultProps = {\n  children: null,\n};\n\nexport default Header;\n","\n/**\n * @file Render an html main element.\n * @module base-components/Main\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './styles.scss';\n\nconst Main = ({ children }) => (\n  <main className=\"main\">\n    {children}\n  </main>\n);\n\nMain.propTypes = {\n  children: PropTypes.node,\n};\n\nMain.defaultProps = {\n  children: null,\n};\n\nexport default Main;\n","/**\n * @file Render the navigation bar.\n * @module app-components/NavBar\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nimport './styles.scss';\n\nconst NavBar = ({ className }) => (\n  <ul className={cn('nav-bar', className)}>\n    <li className=\"nav-bar__item\">\n      <NavLink\n        className=\"nav-bar__item-link\"\n        exact\n        activeClassName=\"nav-bar__item-link--active\"\n        to=\"/\"\n      >\n        Home\n      </NavLink>\n    </li>\n    <li className=\"nav-bar__item\">\n      <NavLink\n        className=\"nav-bar__item-link\"\n        activeClassName=\"nav-bar__item-link--active\"\n        to=\"/settings\"\n      >\n        Settings\n      </NavLink>\n    </li>\n  </ul>\n);\n\nNavBar.propTypes = {\n  className: PropTypes.string,\n};\n\nNavBar.defaultProps = {\n  className: '',\n};\n\nexport default NavBar;\n","/**\n * @module App\n */\nimport React, { Suspense, lazy } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Header from '../base-components/Header';\nimport Main from '../base-components/Main';\n\nimport NavBar from '../app-components/NavBar';\n\nimport './styles.scss';\n\n// Code Splitting\nconst Users = lazy(() => import(/* webpackPrefetch: true */ '../app-components/Users'));\nconst Settings = lazy(() => import(/* webpackPrefetch: true */ '../app-components/Settings'));\n\n/**\n *  Render the app.\n * @param {*} store redux store\n */\nconst App = ({ store }) => (\n  <Provider store={store}>\n    <Router>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Header>\n          <NavBar />\n        </Header>\n        <Switch>\n          <Route path=\"/settings\">\n            <Main>\n              <Settings />\n            </Main>\n          </Route>\n          <Route path=\"/\">\n            <Main>\n              <Users />\n            </Main>\n          </Route>\n        </Switch>\n      </Suspense>\n    </Router>\n  </Provider>\n);\n\nApp.propTypes = {\n  store: PropTypes.shape({}),\n};\n\nApp.defaultProps = {\n  store: null,\n};\n\nexport default App;\n","/**\n * @file Manages Users Redux reducer.\n * @module redux-store/users/Reducer\n */\n\nimport {\n  USERS_FETCH_REQUESTED,\n  USERS_FETCH_SUCCEEDED,\n  USERS_FETCH_FAILED,\n  SET_USERS_RECORD_TO_DISPLAY,\n  RESET_USERS_FETCH_FAILED,\n  SET_USERS_SEARCH,\n  CLEAR_USERS_LIST,\n} from './actionTypes';\n\nconst initialState = {\n  recordsToDisplay: 0,\n  loading: false,\n  error: null,\n  userList: [],\n  userSearch: '',\n};\n\n/**\n * @function\n * @description Users reducer\n */\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case USERS_FETCH_REQUESTED:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case USERS_FETCH_SUCCEEDED:\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        userList: [...state.userList, ...action.payload.response],\n      };\n\n    case USERS_FETCH_FAILED:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error,\n      };\n\n    case SET_USERS_RECORD_TO_DISPLAY:\n      return {\n        ...state,\n        recordsToDisplay: action.payload.records,\n      };\n\n    case RESET_USERS_FETCH_FAILED:\n      return {\n        ...state,\n        error: null,\n      };\n\n    case CLEAR_USERS_LIST:\n      return {\n        ...state,\n        userList: [],\n      };\n\n    case SET_USERS_SEARCH:\n      return {\n        ...state,\n        userSearch: action.payload.userSearch,\n      };\n\n    default:\n      return state;\n  }\n}\n","/**\n * @file Manages Settings Redux reducer.\n * @module redux-store/settings/Reducer\n */\n\nimport { SET_NATIONALITY_SEARCH } from './actionTypes';\n\nconst initialState = {\n  nationalitySearch: [],\n};\n\n/**\n * @function\n * @description Settings Redux reducer.\n */\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_NATIONALITY_SEARCH:\n      return {\n        ...state,\n        nationalitySearch: action.payload.nationalitySearch,\n      };\n\n    default:\n      return state;\n  }\n}\n","/**\n * @file Redux root reducer.\n * @module redux/rootReducer\n */\nimport { combineReducers } from 'redux';\nimport users from './users/reducer';\nimport settings from './settings/reducer';\n\nexport default combineReducers({\n  users,\n  settings,\n});\n","/**\n * @file Generate an Axios instance for http://randomuser.me\n * @module util/api/RandomUserAPI\n */\nimport axios from 'axios';\n/**\n * @constant {AxiosStatic} RandomUserAPI Axios instance for http://randomuser.me.\n */\nconst RandomUserAPI = axios.create({\n  baseURL: 'https://randomuser.me/api/',\n});\n\nexport default RandomUserAPI;\n","/**\n * @file Manages user requests.\n * @module services/UserService\n */\nimport RandomUserAPI from '../utils/api/RandomUserAPI';\n\n/**\n * @constant {number} DEFAULT_USER_LIST_LENGTH the default number of records to get from the\n * users list\n */\nconst DEFAULT_USER_LIST_LENGTH = 10;\n\n/**\n * @typedef getUserListParams\n * @property {number} listLength number of records to be gotten.s\n * @property {string|null} params.nationalities comma-separated nationality list.\n */\n\n/**\n * @function\n * @async\n * @description Get users list\n * @param {getUserListParams} params parameters object.\n */\nexport const getUserList = async (\n  params = {\n    listLength: DEFAULT_USER_LIST_LENGTH,\n    nationalities: null,\n  },\n) => {\n  try {\n    const response = await RandomUserAPI.get('', {\n      params: {\n        results: params.listLength,\n        nat: params.nationalities,\n      },\n    });\n    return response.data.results;\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.log(err);\n    throw err;\n  }\n};\n","/**\n * @file Manages Users redux-saga\n * @module redux-store/users/saga\n */\nimport {\n  call, put, takeLatest, all,\n} from 'redux-saga/effects';\nimport { USERS_FETCH_REQUESTED } from './actionTypes';\nimport { requestUsersSuccess, requestUsersError } from './actions';\nimport { getUserList } from '../../services/UserService';\n\n/**\n * @generator\n * @description trigger getUserList API call.\n * @param {string} action action reference to access to action payload.\n */\nfunction* fetchUsers(action) {\n  try {\n    const result = yield call(() => getUserList(action.payload.params));\n    yield put(requestUsersSuccess(result));\n  } catch (e) {\n    yield put(requestUsersError(e.message));\n  }\n}\n/**\n * @generator\n * @description watches for all USERS_FETCH_REQUESTED actions.\n */\nfunction* watchFetchUsers() {\n  yield takeLatest(USERS_FETCH_REQUESTED, fetchUsers);\n}\n\n/**\n * @generator\n * @description export the rootSaga single entry point to start all Sagas at once.\n */\nexport default function* sagas() {\n  yield all([watchFetchUsers()]);\n}\n","/**\n * @file Redux Root Saga.\n * @module redux/rootSaga\n */\nimport { all, spawn } from 'redux-saga/effects';\nimport userSagas from './users/sagas';\n\n/**\n * @generator\n * @description aggregate multiple Sagas to a single entry point for the sagaMiddleware to run.\n * It uses *spawn* which is an effect that will disconnect your child saga from its parent,\n * allowing it to fail without crashing it's parent.\n */\nexport default function* rootSaga() {\n  yield all([\n    userSagas,\n  ].map(spawn));\n}\n","/**\n * @file Configure a redux store.\n * @module redux/configureStore\n */\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './rootSaga';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\n\n/**\n * Configure a Redux store.\n * @function\n */\nexport default function configureStore(preloadedState = {}) {\n  const composeEnhancers = composeWithDevTools({\n    // Specify name here, actionsBlacklist, actionsCreators and other options if needed\n  });\n\n  // mount it on the Store\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\n\n  // then run the saga\n  sagaMiddleware.run(rootSaga);\n  return store;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport configureStore from './store/configureStore';\n\nconst store = configureStore();\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n"],"sourceRoot":""}